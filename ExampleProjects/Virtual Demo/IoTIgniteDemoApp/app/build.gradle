apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "com.ardic.android.iotignitedemoapp"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode project.VERSION_CODE.toInteger()
        versionName project.VERSION_NAME
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all {
                variant -> renameAPK(variant, defaultConfig, 'R')
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}
repositories {
    mavenLocal()
    mavenCentral()
    maven { 
        url "http://repo.maven.apache.org/maven2"
        url "http://archiva.ardictech.com/repository/internal"
    }
    flatDir {
        dirs 'libs'
    }
}
dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.0.0'
    compile 'com.android.support:support-v4:24.0.0'
    compile 'com.google.code.gson:gson:2.7'
    compile(name:'IoTIgnite-0.1', ext:'aar')
}

def renameAPK(variant, defaultConfig, buildType) {
    variant.outputs.each { output ->
        def formattedDate = new Date().format('yyyyMMdd')
        if (output.zipAlign) {
            def file = output.outputFile
            def fileName = applicationName + "_v" + defaultConfig.versionName + "_" + formattedDate + "_" + buildType + ".apk"
            output.outputFile = new File(file.parent, fileName)
        }
        def file = output.packageApplication.outputFile
        def fileName = applicationName + "_v" + defaultConfig.versionName + "_" + formattedDate + "_" + buildType + "_unaligned.apk"
        output.packageApplication.outputFile = new File(file.parent, fileName)
    }
}